@page "/forgot-password"
@using BlazorApp1.Client.Services
@using CurrieTechnologies.Razor.SweetAlert2
@using System.Text.RegularExpressions
@inject IAccountService AccountService
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal
@layout NoMenuLayout

<HeadContent>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
</HeadContent>

<style>
    body {
        background-image: url(/B3.jpg);
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: cover;
        background-position: center;
        min-height: 100vh;
        margin: 0;
        padding: 0;
        overflow: hidden;
    }

    .login-container {
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 1rem;
        overflow: hidden;
        animation: fadeIn 0.8s ease-out;
    }

    .login-card {
        background-color: rgba(250,250,250,0.3);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255,255,255,0.2);
        box-shadow: 0 15px 35px rgba(0,0,0,0.2);
        border-radius: 15px;
        padding: 1.5rem;
        width: 100%;
        max-width: 400px;
        max-height: 90vh;
        overflow-y: auto;
        transform: translateY(0);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        animation: slideUp 0.8s ease-out;
    }

    .logo {
        width: auto;
        height: 6.5rem;
        margin-bottom: 1rem;
        filter: drop-shadow(0 4px 6px rgba(0,0,0,0.1));
        animation: pulse 2s infinite;
    }

    .login-title {
        font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
        color: #333;
        font-size: 1.75rem;
        font-weight: 600;
        letter-spacing: 3px;
        margin-bottom: 1.5rem;
        text-align: center;
        text-transform: uppercase;
        position: relative;
    }

    .form-label {
        font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
        letter-spacing: 2px;
        font-weight: 500;
        color: #333;
    }

    .form-control {
        background-color: rgba(255,255,255,0.9);
        border: 1px solid rgba(0,0,0,0.1);
        border-radius: 8px;
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
        width: 100%;
    }

    .form-control:focus {
        background-color: #fff;
        box-shadow: 0 0 0 3px rgba(249, 180, 45, 0.25);
        border-color: #F9B42D;
    }

    .btn-submit {
        background-color: #F9B42D;
        border: none;
        border-radius: 8px;
        color: white;
        font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
        font-weight: 600;
        letter-spacing: 2px;
        padding: 0.75rem 2rem;
        text-transform: uppercase;
        transition: all 0.3s ease;
        width: 100%;
        margin-bottom: 1rem;
    }

    .btn-submit:hover {
        background-color: #e6a012;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(249, 180, 45, 0.3);
    }

    .back-link {
        font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
        letter-spacing: 2px;
        color: #333;
        text-align: center;
        text-decoration: none;
        display: block;
        margin-top: 1rem;
        transition: all 0.3s ease;
    }

    .back-link:hover {
        color: #F9B42D;
    }

    .description-text {
        font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
        color: #333;
        text-align: center;
        margin-bottom: 2rem;
        font-size: 0.9rem;
        line-height: 1.5;
    }
</style>

<div class="login-container">
    <div class="text-center">
        <img src="/LogoA2.png" alt="Roosevelt Park Village" class="logo" />
        <div class="login-card">
            <h4 class="login-title">Forgot Password</h4>
            <p class="description-text">
                Enter your email address below and we'll send you instructions to reset your password.
            </p>
            <div class="mb-4">
                <label for="email" class="form-label">Email Address</label>
                <input type="email" 
                       class="form-control" 
                       id="email" 
                       @bind="email" 
                       placeholder="Enter your email address" />
            </div>
            <button class="btn-submit" @onclick="HandleForgotPassword" disabled="@isLoading">
                @if (isLoading)
                {
                    <span>Please wait...</span>
                }
                else
                {
                    <span>Send Reset Link</span>
                }
            </button>
            <a href="/Login" class="back-link">Back to Login</a>
        </div>
    </div>
</div>

@code {
    private string email = "";
    private bool isLoading = false;

    private async Task HandleForgotPassword()
    {
        if (string.IsNullOrWhiteSpace(email))
        {
            await Swal.FireAsync("Error", "Please enter your email address", SweetAlertIcon.Error);
            return;
        }

        if (!Regex.IsMatch(email, @"^[^@\s]+@[^@\s]+\.[^@\s]+$"))
        {
            await Swal.FireAsync("Error", "Please enter a valid email address", SweetAlertIcon.Error);
            return;
        }

        try
        {
            isLoading = true;
            StateHasChanged();

            var response = await AccountService.RequestPasswordResetAsync(email);
            if (response.IsSuccess)
            {
                await Swal.FireAsync("Success", "If an account exists with this email, you will receive password reset instructions shortly.", SweetAlertIcon.Success);
                NavigationManager.NavigateTo("/Login");
            }
            else
            {
                await Swal.FireAsync("Error", response.Message, SweetAlertIcon.Error);
            }
        }
        catch (Exception ex)
        {
            await Swal.FireAsync("Error", "An error occurred while processing your request.", SweetAlertIcon.Error);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
} 